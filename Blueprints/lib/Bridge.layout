
int bridge_layer = 30;
int patch_layer = 20;

point addBridge(cell* curCell, point anchorPoint, string direction) {


    point cursor;
    point start;
    start.set(anchorPoint.x(), anchorPoint.y()+85e3/2+10e3);

    cursor = wire(curCell, aux4, start, "d", 30e3, 40e3);
    cursor.set(cursor.x(), cursor.y()+20e3);
    cursor = wire(curCell, aux5, cursor, "d", 85e3, 20e3);
    cursor.set(cursor.x(), cursor.y()+20e3);
    cursor = wire(curCell, aux4, cursor, "d", 30e3, 40e3);

    point ret_point = newPoint(cursor.x(), cursor.y());


    //=========Rotate===========
    rotateLayer(curCell, aux4, anchorPoint, angleFromDirection(direction));
    rotateLayer(curCell, aux5, anchorPoint, angleFromDirection(direction));

    layout->drcTool->ruleName = "DRC-Rule";
    layout->drcTool->minimumDistance(5000, aux4, protect);
    string curCellName = curCell->cellName;
    layout->drawing->setCell(curCellName+":DRC-Rule");
    // debug(curCellName+":DRC-Rule");
    if (layout->drawing->currentCell->cellName == (curCellName+":DRC-Rule")) {
      // debug("YES"+layout->drawing->currentCell->cellName);
      layout->drawing->deleteCurrentCell();
      layout->drawing->setCell(curCellName);
    } else {
      // debug("NO"+layout->drawing->currentCell->cellName);
      layout->booleanTool->boolOnLayer(aux4, aux4, patch_layer, "A+B", 0, 0, 0);
      layout->booleanTool->boolOnLayer(aux5, aux5, bridge_layer, "A+B", 0, 0, 0);
    }
    layout->drawing->setCell(curCellName);

    // debug(layout->drawing->currentCell->cellName);

    clearLayer(curCell, aux4);
    clearLayer(curCell, aux5);

    ret_point = rotateVector(newPoint(ret_point.x()-anchorPoint.x(),
                                     ret_point.y()-anchorPoint.y()),
                            anchorPoint, direction);
    return ret_point;
}
