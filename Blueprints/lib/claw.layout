/*
    Claw coupler for the resonator. Anchor point is in the symmetry plane of the claw, offset to the egde of M layer towards the resonator

*/


point addClaw(cell* curCell, point anchorPoint, string direction) {

        
    point cursor;
    point start;
    start.set(anchorPoint.x(), anchorPoint.y()-w_res/2);

    //=========Metal===========
    
    cursor = wire(curCell, aux2, start, "r", w_q/2+g_q+claw_gap+w_thinGround+w_claw, w_res);
    cursor.set(cursor.x()-w_claw/2, cursor.y()-w_res/2);
    wire(curCell, aux2, cursor, "d", L_claw_right, w_claw);
    
    cursor = wire(curCell, aux2, start, "l", w_q/2+g_q+claw_gap+w_thinGround+w_claw, w_res);
    cursor.set(cursor.x()+w_claw/2, cursor.y()-w_res/2);
    wire(curCell, aux2, cursor, "d", L_claw_left, w_claw);
    
    //=========Protect===========

    cursor = wire(curCell, aux3, start, "r", w_q/2+g_q+w_thinGround+claw_gap+w_claw, w_res+2*claw_gap);
    cursor.set(cursor.x()-w_claw/2, cursor.y()+w_res/2+claw_gap);
    wire(curCell, aux3, cursor, "d", L_claw_right+2*claw_gap+w_res, w_claw+2*claw_gap);
    
    cursor = wire(curCell, aux3, start, "l", w_q/2+g_q+claw_gap+w_thinGround+w_claw, w_res+2*claw_gap);
    cursor.set(cursor.x()+w_claw/2, cursor.y()+w_res/2+claw_gap);
    wire(curCell, aux3, cursor, "d", L_claw_left+2*claw_gap+w_res, w_claw+2*claw_gap);
    
    //=========Rotate===========
    
    
    rotateLayer(curCell, aux2, anchorPoint, angleFromDirection(direction));
    rotateLayer(curCell, aux3, anchorPoint, angleFromDirection(direction));
    
    layout->booleanTool->boolOnLayer(aux2, aux2, M, "A+B", 0, 0, 0);
    layout->booleanTool->boolOnLayer(aux3, aux3, protect, "A+B", 0, 0, 0);
    
    clearAllAuxiliaryAux(curCell);

    return rotateVector(newPoint(0, -w_res-claw_gap-w_thinGround), anchorPoint, direction);
}
