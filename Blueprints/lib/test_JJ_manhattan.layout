
/*
    Adds a test squid.
*/

        int structure_padding = 12e3;
        int pad_side_len = 200e3;
        int ebeam_overlap = 2e3;
        int test_squid_counter = 1;


void addTestSquid(cell* curCell, point center, int w_JJ, int h_JJ, string direction="d", bool no_pads,int corr, double asymmetry=0) {

        int test_JJ_pads_len = 5.45e3;
        int JJ_delta_arm_len = 0;



    int total_w = 2*structure_padding+pad_side_len;
    int total_h = 3*structure_padding+2*pad_side_len;
    point corner = newPoint(center.x()-total_w/2, center.y()-total_h/2);
    curCell->addBox(corner.x(), corner.y(), total_w, total_h, aux4);

    element* marker = curCell->addText(protect, newPoint(center.x()+250e3, center.y()+100e3), roman(test_squid_counter));
    curCell->textToPolygon(100e3);
    test_squid_counter+=1;

    if(!no_pads) {
        curCell->addBox(corner.x()+structure_padding, corner.y()+structure_padding, pad_side_len, pad_side_len, aux3);
        curCell->addBox(corner.x()+structure_padding, corner.y()+2*structure_padding+pad_side_len, pad_side_len, pad_side_len, aux3);
    }
    point cursor;
    // Top

    addSquidManhattan(curCell, center, direction,  w_JJ,  h_JJ,  corr,  asymmetry);


    rotateLayer(curCell, aux, center, angleFromDirection(direction));
    rotateLayer(curCell, aux2, center, angleFromDirection(direction));
    rotateLayer(curCell, aux3, center, angleFromDirection(direction));
    rotateLayer(curCell, aux4, center, angleFromDirection(direction));

     // ==== Merge aux structure to protect, M and M1

    layout->booleanTool->boolOnLayer(aux3, aux3, M, "A+B", 0, 0, 0);
    layout->booleanTool->boolOnLayer(aux4, aux4, protect, "A+B", 0, 0, 0);
  //  layout->booleanTool->boolOnLayer(aux, aux2, jj_layer, "A-B", 0, 0, 2);

    rotateLayer(curCell, aux5, center, angleFromDirection(direction));
//    layout->booleanTool->boolOnLayer(aux5, aux5, bandage, "A+B", 0, 0, 0);
    clearLayer(curCell, aux);
    clearLayer(curCell, aux5);
    clearAllAuxiliaryAux(curCell);



    addLocalAlignmentMarkBMSTU(curCell, newPoint(center.x()-150e3, center.y()-150e3));
    addLocalAlignmentMarkBMSTU(curCell, newPoint(center.x()+150e3, center.y()-150e3));
    addLocalAlignmentMarkBMSTU(curCell, newPoint(center.x()+150e3, center.y()+150e3));
    addLocalAlignmentMarkBMSTU(curCell, newPoint(center.x()-150e3, center.y()+150e3));

}
